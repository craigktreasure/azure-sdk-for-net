// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.MixedReality.SpatialAnchors.Client.Models
{
    /// <summary> The SpatialAnchorResponseInfo. </summary>
    public partial class SpatialAnchorResponseInfo
    {
        /// <summary> Initializes a new instance of SpatialAnchorResponseInfo. </summary>
        /// <param name="spatialAnchorId"> The spatial anchor identifier. </param>
        /// <param name="code"> The response code. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="spatialAnchorId"/> or <paramref name="code"/> is null. </exception>
        internal SpatialAnchorResponseInfo(string spatialAnchorId, string code)
        {
            if (spatialAnchorId == null)
            {
                throw new ArgumentNullException(nameof(spatialAnchorId));
            }
            if (code == null)
            {
                throw new ArgumentNullException(nameof(code));
            }

            SpatialAnchorId = spatialAnchorId;
            Code = code;
        }

        /// <summary> Initializes a new instance of SpatialAnchorResponseInfo. </summary>
        /// <param name="spatialAnchorId"> The spatial anchor identifier. </param>
        /// <param name="code"> The response code. </param>
        /// <param name="spatialAnchor"> The requested spatial anchor information. </param>
        internal SpatialAnchorResponseInfo(string spatialAnchorId, string code, SpatialAnchorInfo spatialAnchor)
        {
            SpatialAnchorId = spatialAnchorId;
            Code = code;
            SpatialAnchor = spatialAnchor;
        }

        /// <summary> The spatial anchor identifier. </summary>
        public string SpatialAnchorId { get; }
        /// <summary> The response code. </summary>
        public string Code { get; }
        /// <summary> The requested spatial anchor information. </summary>
        public SpatialAnchorInfo SpatialAnchor { get; }
    }
}
