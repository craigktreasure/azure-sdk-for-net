// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure;

namespace Azure.MixedReality.SpatialAnchors.Client.Models
{
    /// <summary> The SpatialAnchorInfo. </summary>
    public partial class SpatialAnchorInfo
    {
        /// <summary> Initializes a new instance of SpatialAnchorInfo. </summary>
        /// <param name="etag"> An identifier representing the returned state of the resource. </param>
        /// <param name="metadata"> Anchor metadata. </param>
        /// <param name="neighborhoodAnchorId"> The anchor&apos;s neighborhood anchor identifier. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="metadata"/> or <paramref name="neighborhoodAnchorId"/> is null. </exception>
        internal SpatialAnchorInfo(ETag etag, IReadOnlyDictionary<string, string> metadata, string neighborhoodAnchorId)
        {
            if (metadata == null)
            {
                throw new ArgumentNullException(nameof(metadata));
            }
            if (neighborhoodAnchorId == null)
            {
                throw new ArgumentNullException(nameof(neighborhoodAnchorId));
            }

            Etag = etag;
            Metadata = metadata;
            NeighborhoodAnchorId = neighborhoodAnchorId;
        }

        /// <summary> Initializes a new instance of SpatialAnchorInfo. </summary>
        /// <param name="etag"> An identifier representing the returned state of the resource. </param>
        /// <param name="metadata"> Anchor metadata. </param>
        /// <param name="expirationUnixTimeMS"> A Unix timestamp indicating the point in time the anchor expires. </param>
        /// <param name="spatialAnchorToNeighborhoodAnchorPoseData"> Anchor pose information. </param>
        /// <param name="neighborhoodAnchorId"> The anchor&apos;s neighborhood anchor identifier. </param>
        internal SpatialAnchorInfo(ETag etag, IReadOnlyDictionary<string, string> metadata, long? expirationUnixTimeMS, string spatialAnchorToNeighborhoodAnchorPoseData, string neighborhoodAnchorId)
        {
            Etag = etag;
            Metadata = metadata;
            ExpirationUnixTimeMS = expirationUnixTimeMS;
            SpatialAnchorToNeighborhoodAnchorPoseData = spatialAnchorToNeighborhoodAnchorPoseData;
            NeighborhoodAnchorId = neighborhoodAnchorId;
        }
        /// <summary> Anchor metadata. </summary>
        public IReadOnlyDictionary<string, string> Metadata { get; }
        /// <summary> A Unix timestamp indicating the point in time the anchor expires. </summary>
        public long? ExpirationUnixTimeMS { get; }
        /// <summary> Anchor pose information. </summary>
        public string SpatialAnchorToNeighborhoodAnchorPoseData { get; }
        /// <summary> The anchor&apos;s neighborhood anchor identifier. </summary>
        public string NeighborhoodAnchorId { get; }
    }
}
