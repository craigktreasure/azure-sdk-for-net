// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.MixedReality.SpatialAnchors.Client.Models
{
    public partial class SpatialAnchorInfo
    {
        internal static SpatialAnchorInfo DeserializeSpatialAnchorInfo(JsonElement element)
        {
            ETag etag = default;
            IReadOnlyDictionary<string, string> metadata = default;
            Optional<long> expirationUnixTimeMS = default;
            Optional<string> spatialAnchorToNeighborhoodAnchorPoseData = default;
            string neighborhoodAnchorId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("etag"))
                {
                    etag = new ETag(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("metadata"))
                {
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    metadata = dictionary;
                    continue;
                }
                if (property.NameEquals("expirationUnixTimeMS"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    expirationUnixTimeMS = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("spatialAnchorToNeighborhoodAnchorPoseData"))
                {
                    spatialAnchorToNeighborhoodAnchorPoseData = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("neighborhoodAnchorId"))
                {
                    neighborhoodAnchorId = property.Value.GetString();
                    continue;
                }
            }
            return new SpatialAnchorInfo(etag, metadata, Optional.ToNullable(expirationUnixTimeMS), spatialAnchorToNeighborhoodAnchorPoseData.Value, neighborhoodAnchorId);
        }
    }
}
