// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.MixedReality.ObjectAnchors.Models
{
    /// <summary> Represents an ingestion configuration. </summary>
    public partial class IngestionConfiguration
    {
        /// <summary> Initializes a new instance of IngestionConfiguration. </summary>
        /// <param name="gravity"> . </param>
        /// <param name="scale"> Scale of transformation of asset units into meter space. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="gravity"/> is null. </exception>
        public IngestionConfiguration(Vector3 gravity, float scale)
        {
            if (gravity == null)
            {
                throw new ArgumentNullException(nameof(gravity));
            }

            Gravity = gravity;
            KeyFrameIndexes = new ChangeTrackingList<int>();
            GtTrajectory = new ChangeTrackingList<Pose>();
            Scale = scale;
            TestTrajectory = new ChangeTrackingList<Pose>();
        }

        /// <summary> Initializes a new instance of IngestionConfiguration. </summary>
        /// <param name="dimensions"> . </param>
        /// <param name="boundingBoxCenter"> . </param>
        /// <param name="gravity"> . </param>
        /// <param name="keyFrameIndexes"> Indices of Key Frames. </param>
        /// <param name="gtTrajectory"> Ground truth trajectory. </param>
        /// <param name="principalAxis"> . </param>
        /// <param name="scale"> Scale of transformation of asset units into meter space. </param>
        /// <param name="supportingPlane"> . </param>
        /// <param name="testTrajectory"> Test Trajectory. </param>
        internal IngestionConfiguration(Vector3 dimensions, Vector3 boundingBoxCenter, Vector3 gravity, IList<int> keyFrameIndexes, IList<Pose> gtTrajectory, Quaternion principalAxis, float scale, Vector4 supportingPlane, IList<Pose> testTrajectory)
        {
            Dimensions = dimensions;
            BoundingBoxCenter = boundingBoxCenter;
            Gravity = gravity;
            KeyFrameIndexes = keyFrameIndexes;
            GtTrajectory = gtTrajectory;
            PrincipalAxis = principalAxis;
            Scale = scale;
            SupportingPlane = supportingPlane;
            TestTrajectory = testTrajectory;
        }

        public Vector3 Dimensions { get; set; }
        public Vector3 BoundingBoxCenter { get; set; }
        public Vector3 Gravity { get; set; }
        /// <summary> Indices of Key Frames. </summary>
        public IList<int> KeyFrameIndexes { get; }
        /// <summary> Ground truth trajectory. </summary>
        public IList<Pose> GtTrajectory { get; }
        public Quaternion PrincipalAxis { get; set; }
        /// <summary> Scale of transformation of asset units into meter space. </summary>
        public float Scale { get; set; }
        public Vector4 SupportingPlane { get; set; }
        /// <summary> Test Trajectory. </summary>
        public IList<Pose> TestTrajectory { get; }
    }
}
